# Règles trop bien sécurisées

## Scénario 1: Inclusion de fichier local (LFI)
alert http any any -> any any (msg:"TEST Local File Inclusion attempt"; flow:to_server,established; http_uri; content:"/etc/passwd", nocase; classtype:web-application-attack; sid:1000003; rev:2;)

## Scénario 2: Exécution d'un code à distance (RCE) avec PHP
alert http any any -> any any (msg:"TEST PHP code injection attempt"; flow:to_server,established; http_client_body; content:"<?php", nocase; classtype:web-application-attack; sid:1000004; rev:2;)

## Scénario 3: Injection SQL
alert http any any -> any any (msg:"TEST SQL Injection attempt"; flow:to_server,established; http_uri; content:"' OR '1'='1", nocase; pcre:"/(\b(or|and)\b\s+[^=<>]+\s*(=|like)|(\%27)|(\')|(\-\-)|(\%23)|(#))/i"; classtype:web-application-attack; sid:1000001; rev:2;)

## Scénario 4: Scan de ports / reconnaissance réseau
alert tcp any any -> 192.168.1.200 1:65535 (msg:"Port Scan Detected"; flags:S; detection_filter:track by_src, count 10, seconds 60; classtype:attempted-recon; sid:1000006; rev:2;)

## Scénario 5: Attaque par cross-site scripting (XSS)
alert http any any -> 192.168.1.200 80 (msg:"Cross-Site Scripting Attempt"; flow:to_server,established; http_uri; content:"<script>alert(1)</script>", nocase; pcre:"/<script\b[^>]*>.*?alert\s*\(/is"; classtype:web-application-attack; sid:1000005; rev:2;)
